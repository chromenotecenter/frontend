{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\chromeNoteCenter\\\\frontend\\\\src\\\\components\\\\Navbar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons/lib';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { MobileIcon, Nav, NavbarContainer, NavItem, NavLinks, NavLogo, NavMenu, NavBtn, NavBtnLink } from './NavbarElements';\nimport SignUpPop from '../SignUpPop';\n\nconst Navbar = ({\n  toggle\n}) => {\n  _s();\n\n  const [scrollNav, setScrollNav] = useState(false);\n  var state = {\n    seen: false\n  };\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  const togglePop = () => {\n    this.setState({\n      seen: !this.state.seen\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: {\n        color: '#fff'\n      },\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        scrollNav: scrollNav,\n        children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n            onClick: toggleHome,\n            to: \"/\",\n            children: \"Sentrilize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MobileIcon, {\n            onClick: toggle,\n            children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n            children: [/*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"about\",\n                smooth: true,\n                duration: 500,\n                spy: true,\n                exact: \"true\",\n                offset: -80,\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"discover\",\n                smooth: true,\n                duration: 500,\n                spy: true,\n                exact: \"true\",\n                offset: -80,\n                children: \"Discover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"services\",\n                smooth: true,\n                duration: 500,\n                spy: true,\n                exact: \"true\",\n                offset: -80,\n                children: \"Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                to: \"signup\",\n                smooth: true,\n                duration: 500,\n                spy: true,\n                exact: \"true\",\n                offset: -80,\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavBtn, {\n            children: /*#__PURE__*/_jsxDEV(NavBtnLink, {\n              onClick: this.togglePop,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), this.state.seen ? /*#__PURE__*/_jsxDEV(SignUpPop, {\n      toggle: this.togglePop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Navbar, \"eaUcF+T16QTGbajlwzqOoSnbGek=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/chromeNoteCenter/frontend/src/components/Navbar/index.js"],"names":["React","useState","useEffect","FaBars","IconContext","animateScroll","scroll","MobileIcon","Nav","NavbarContainer","NavItem","NavLinks","NavLogo","NavMenu","NavBtn","NavBtnLink","SignUpPop","Navbar","toggle","scrollNav","setScrollNav","state","seen","changeNav","window","scrollY","addEventListener","toggleHome","scrollToTop","togglePop","setState","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport {\r\n    MobileIcon,\r\n    Nav,\r\n    NavbarContainer,\r\n    NavItem,\r\n    NavLinks,\r\n    NavLogo,\r\n    NavMenu,\r\n    NavBtn,\r\n    NavBtnLink\r\n} from './NavbarElements';\r\nimport SignUpPop from '../SignUpPop'\r\n\r\nconst Navbar = ({ toggle }) => {\r\n    const [scrollNav, setScrollNav] = useState(false);\r\n    var state = {\r\n        seen: false\r\n    };\r\n\r\n    \r\n\r\n\r\n    const changeNav = () => {\r\n        if (window.scrollY >= 80) {\r\n            setScrollNav(true);\r\n        } else {\r\n            setScrollNav(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', changeNav);\r\n    }, []);\r\n\r\n    const toggleHome = () => {\r\n        scroll.scrollToTop();\r\n    };\r\n\r\n    const togglePop = () => {\r\n        this.setState({\r\n            seen: !this.state.seen\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <Nav scrollNav={scrollNav}>\r\n                    <NavbarContainer>\r\n                        <NavLogo onClick={toggleHome} to='/'>\r\n                            Sentrilize\r\n            </NavLogo>\r\n                        <MobileIcon onClick={toggle}>\r\n                            <FaBars />\r\n                        </MobileIcon>\r\n                        <NavMenu>\r\n                            <NavItem>\r\n                                <NavLinks\r\n                                    to='about'\r\n                                    smooth={true}\r\n                                    duration={500}\r\n                                    spy={true}\r\n                                    exact='true'\r\n                                    offset={-80}\r\n                                >\r\n                                    About\r\n                </NavLinks>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLinks\r\n                                    to='discover'\r\n                                    smooth={true}\r\n                                    duration={500}\r\n                                    spy={true}\r\n                                    exact='true'\r\n                                    offset={-80}\r\n                                >\r\n                                    Discover\r\n                </NavLinks>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLinks\r\n                                    to='services'\r\n                                    smooth={true}\r\n                                    duration={500}\r\n                                    spy={true}\r\n                                    exact='true'\r\n                                    offset={-80}\r\n                                >\r\n                                    Services\r\n                </NavLinks>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLinks\r\n                                    to='signup'\r\n                                    smooth={true}\r\n                                    duration={500}\r\n                                    spy={true}\r\n                                    exact='true'\r\n                                    offset={-80}\r\n                                >\r\n                                    Sign In\r\n                </NavLinks>\r\n                            </NavItem>\r\n                        </NavMenu>\r\n                        <NavBtn>\r\n                            <NavBtnLink onClick={this.togglePop} >\r\n                                Sign Up\r\n                            </NavBtnLink>\r\n                        </NavBtn>\r\n                    </NavbarContainer>\r\n                </Nav>\r\n            </IconContext.Provider>\r\n        \r\n        {this.state.seen ? <SignUpPop toggle={this.togglePop} /> : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}